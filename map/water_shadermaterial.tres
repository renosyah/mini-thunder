[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=2]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.stable's SpatialMaterial.

shader_type spatial;
uniform vec4 out_color : hint_color = vec4(0, 0.317647, 0.443137, 0.584314);
uniform float amount : hint_range(0.2, 1.5) = 0.8;

float generate_offset(float x, float z, float val1, float val2, float time){
	float speed = 1.0;
	
	float radiansX = ((mod( x + z * x * val1, amount) / amount) + (time * speed) * mod(x * 0.8 + z, 1.5)) * 2.0 * 3.14;
	float radiansZ = ((mod(val2 * (z * x + x * z), amount) / amount) + (time * speed) * 2.0 * mod(x,2.0)) * 2.0 * 3.14;
	
	return amount * 0.5 * (sin(radiansZ) + cos(radiansX));
}

vec3 apply_distortion(vec3 vertext, float time){
	float xd = generate_offset(vertext.x, vertext.z, 0.2, 0.1, time);
	float yd = generate_offset(vertext.x, vertext.z, 0.1, 0.3, time);
	float zd = generate_offset(vertext.x, vertext.z, 0.15, 0.2, time);
	return vertext + vec3(xd,yd,zd);
}

void vertex() {
	VERTEX = apply_distortion(VERTEX, TIME * 0.6);
}

void fragment() {
	METALLIC = 0.6;
	SPECULAR = 0.5;
	ROUGHNESS = 0.2;
	ALBEDO = out_color.xyz;
}
"

[resource]
shader = SubResource( 2 )
shader_param/out_color = Color( 0, 0.317647, 0.443137, 0.584314 )
shader_param/amount = 0.8
